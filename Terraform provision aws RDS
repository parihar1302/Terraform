#AWS MYSQL RDS Provisioning by  Terraform Code:            https://faraday.ai/blog/how-to-create-an-rds-instance-with-terraform/
====================================================

 resource "aws_db_instance" "myrds" {
#   allocated_storage   = var.dbstorage
   backup_retention_period  = 7   # in days
#   db_subnet_group_name     = "${var.rds_public_subnet_group}"
   storage_type        = "gp2"
   storage_encrypted   = true # you should always do this
   identifier          = "rdstf"
   engine              = "mysql"
   engine_version      = "8.0.27"
#   multi_az            = false
   instance_class      = "db.t2.micro"
   username            = "admin"
   password            = "Abhi@1302"
   port                = 3306     ## 5432 for postgre
   publicly_accessible = true     ## By default is false. True means now RDS instance can connect to any server with it's endpoint, user & password
   skip_final_snapshot = true     ## By default is false. True eans, it will create a snapshot while terminating the RDS instance.
   vpc_security_group_ids   = ["${aws_security_group.mydb1.id}"]

   tags = {
     Name = "MyRDS"
   }
 }
---------------------------------------------------------------------------------------------------------------------

##AWS PostgreSQL RDS Provisioning by  Terraform Code:
================================================
resource "aws_db_instance" "abhi-test" {
  allocated_storage    = 100
  db_subnet_group_name = "db-subnetgrp"
  engine               = "postgres"
  engine_version       = "11.5"
  identifier           = "abhi-test"
  instance_class       = "db.m5.large"
  password             = "Abhi@1302"
  skip_final_snapshot  = true
  storage_encrypted    = true
  username             = "postgres"
}


* terraform init

* terraform plan

* terrafrm apply
