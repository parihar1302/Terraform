# variable "instance_type" {                      
#   description = "this is ec2 instance type; for single instance"      #for one ec2 ; worked
#   type = string
#   default = "t2.micro"
# }

# variable "instance_type" {           
#   description = "list of instance type for each instances; for multiple ec2"    # for multi ec2
#   type = list(string)
#   default = ["t2.micro", "m6g.large"]
# }

# variable "ami_key_pair_name" {                  ## When you use existing keypair value
#   description = "this is ec2 instance keypair; existing keypair used"
#   type = string
#   default = "cwagentec2keypairprefixgenerated"
# }

variable "key_pair_name" {                
  description = "this is ec2 instance keypair dynamic/autogenerated by terraform"
  type = string
  default = "cwagent-ec2-keypair-autogenerated"
}

# variable "instance_name" {
#   description = "ec2 instance name"
#   type = string
#   default = "cwagent-ec2-instance"
# }

variable "iam_role_name" {
  description = "Role to assign on ec2 instance"
  type = string
  default = "cwagent-iam-role"
}

variable "iam_policy_name" {
  description = "Policy to allow CloudWatch, S3 & SSM access"
  type = string
  default = "cwagent-iam-policy"
}

variable "iam_instance_profile_name" {
  description = "ec2 instance profile attach to instance"
  type = string
  default = "cwagent-ec2-instance-profile"
}

# variable "ebs_volume_size" {
#   description = "ebs root volume size from 8 Gb to 20 GB"
#   type = string
#   default = "20"
# }

variable "vpc_id" {
  description = "The ID of the existing VPC"
  type = string
  default = "vpc-08fe51c30800caa79"
}

# variable "subnet_id" {
#   description = "The ID of the existing subnet"
#   type = string
#   default = "subnet-011e5fc6cf48d0b75"
# }

# variable "instance_count" {
#   default = "1"
# }

variable "disable_api_termination" {
  description = "EC2 Terminataion Protection"
  type        = bool
  default     = false
}

variable "index" {
  description   = "Shows no of resources"
  type          = number
  default       = 1
}

variable "instance_configurations" {
  description = "list of instance configuration"
  type = map(object({
    name = string
    instance_type = string
    ebs_volume_size = number
    architecture = string
    subnet_id = string
  }))
  default = {
    instance1 = {
      name = "Web-Server"
      instance_type = "c6g.large"
      ebs_volume_size = 15
      architecture = "arm64"
      subnet_id = "subnet-011e5fc6cf48d0b75"
    },
    instance2 = {
      name = "App-Server-a"
      instance_type = "a1.medium"
      ebs_volume_size = 20
      architecture = "arm64"
      subnet_id = "subnet-011e5fc6cf48d0b75"     ## Availability Zone-> us-east-1a
    },
    instance3 = {
      name = "App-Server-b"
      instance_type = "a1.medium"
      ebs_volume_size = 20
      architecture = "arm64"
      subnet_id = "subnet-037fc1f189ec2bee3"     ## Availability Zone-> us-east-1b {For Disastor Recovery, keeping both application instance in different regions}
    },
    instance4 = {
      name = "DB-Server"
      instance_type = "t2.micro"
      ebs_volume_size = 25
      architecture = "x86_64"
      subnet_id = "subnet-011e5fc6cf48d0b75"
      
    }
  }
}